{"version":3,"sources":["components/Map.js","actions/index.js","components/Overview.js","components/Graphs.js","components/Meta.js","components/App.js","reducers/index.js","index.js"],"names":["connect","state","hotspots","getHotspots","dispatch","a","axios","get","response","type","payload","data","props","useState","latitude","longitude","width","window","innerWidth","height","zoom","viewPort","setViewPort","hover","setHover","useEffect","addEventListener","e","setTimeout","inHeight","target","innerHeight","inWidth","className","mapboxApiAccessToken","mapStyle","onViewportChange","kannurJSON","id","paint","features","map","obj","properties","centroid","long","lat","key","onMouseEnter","preventDefault","onMouseLeave","label","closeButton","notes","overview","getOverview","getDelta","delta","active","confirmed","deceased","recovered","details","getDetails","Chart","defaults","global","defaultFontFamily","options","maintainAspectRatio","spanGaps","legend","display","position","align","labels","boxWidth","scales","xAxes","ticks","autoSkip","autoSkipPadding","gridLines","color","lineWidth","yAxes","Meta","href","App","React","Component","combineReducers","kannur","action","contZones","confirmedData","recoveredData","deceasedData","activeData","forEach","push","date","Kannur","total","chartData","datasets","borderColor","pointRadius","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.12af3cb7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport ReactMapGL, { Marker, Source, Layer, Popup } from \"react-map-gl\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./mapbox-gl.css\";\r\nimport { getHotspots } from \"../actions\";\r\nimport kannurJSON from \"../data/kannur.json\";\r\n\r\nconst Map = (props) => {\r\n  //initialize viewport state\r\n  const [viewPort, setViewPort] = useState({\r\n    latitude: 11.9745,\r\n    longitude: 75.5499,\r\n    width: `${\r\n      window.innerWidth - 0.1 * window.innerWidth <= 900\r\n        ? window.innerWidth - 0.1 * window.innerWidth\r\n        : 900\r\n    }px`,\r\n    height: \"45vh\",\r\n    zoom: 9.7,\r\n  });\r\n  //initialize hover state\r\n  const [hover, setHover] = useState(null);\r\n\r\n  //destructure action and state data from props\r\n  const { getHotspots, hotspots } = props;\r\n\r\n  //fire getHotspots once after first render\r\n  useEffect(() => {\r\n    getHotspots();\r\n  }, [getHotspots]);\r\n\r\n  //make map responsive by listening for resize and updating state\r\n  window.addEventListener(\"resize\", (e) => {\r\n    //adding delay to prevent seViewPort rampage\r\n    setTimeout(() => {\r\n      let inHeight = e.target.innerHeight;\r\n      let inWidth = e.target.innerWidth;\r\n      setViewPort({\r\n        latitude: 11.9745,\r\n        longitude: 75.5499,\r\n        width: `${\r\n          inWidth - 0.1 * inWidth <= 900 ? inWidth - 0.1 * inWidth : 900\r\n        }px`,\r\n        height: `${0.45 * inHeight}px`,\r\n        zoom: 9.7,\r\n      });\r\n    }, 2);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"map-title\">Containment Zones</h3>\r\n\r\n      <div className=\"map-container\">\r\n        <ReactMapGL\r\n          className=\"map\"\r\n          {...viewPort}\r\n          mapboxApiAccessToken=\"pk.eyJ1IjoidXNhbWF0aHBjIiwiYSI6ImNrZHhpdG0ydDBwNDAyc294a2NkNWlqNGsifQ.c2-tAWSpTk3X8wJ151hkKg\"\r\n          mapStyle=\"mapbox://styles/usamathpc/cke75rexm3o0y19mih0ludcn7\"\r\n          onViewportChange={(viewPort) => {\r\n            setViewPort(viewPort);\r\n          }}\r\n        >\r\n          <Source type=\"geojson\" data={kannurJSON}>\r\n            {/* <Layer\r\n            id=\"maplayer\"\r\n            type=\"line\"\r\n            paint={{ \"line-color\": \"#ffffff\" }}\r\n          ></Layer> */}\r\n          </Source>\r\n          <Source type=\"geojson\" data={hotspots}>\r\n            <Layer\r\n              id=\"maplayer2\"\r\n              type=\"line\"\r\n              paint={{\r\n                \"line-color\": \"#8B0000\",\r\n                \"line-opacity\": 0.2,\r\n                \"line-width\": 1.5,\r\n              }}\r\n            ></Layer>\r\n            <Layer\r\n              id=\"maplayer3\"\r\n              type=\"fill\"\r\n              paint={{ \"fill-color\": \"#8B0000\", \"fill-opacity\": 0.15 }}\r\n            ></Layer>\r\n          </Source>\r\n          {hotspots.features.map((obj) => {\r\n            if (\r\n              obj.properties.centroid.long &&\r\n              obj.properties.centroid.lat &&\r\n              viewPort.zoom >= 9.5\r\n            )\r\n              return (\r\n                <Marker\r\n                  key={obj.properties.id}\r\n                  longitude={obj.properties.centroid.long}\r\n                  latitude={obj.properties.centroid.lat}\r\n                >\r\n                  <div\r\n                    className=\"label\"\r\n                    onMouseEnter={(e) => {\r\n                      e.preventDefault();\r\n                      setHover(obj);\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      e.preventDefault();\r\n                      setHover(null);\r\n                    }}\r\n                  >\r\n                    {obj.properties.label}\r\n                  </div>\r\n                </Marker>\r\n              );\r\n            else {\r\n              return null;\r\n            }\r\n          })}\r\n          {hover ? (\r\n            <Popup\r\n              closeButton={false}\r\n              className={\"popup\"}\r\n              longitude={hover.properties.centroid.long}\r\n              latitude={hover.properties.centroid.lat}\r\n            >\r\n              <div>{hover.properties.label}</div>\r\n              <div>{hover.properties.notes}</div>\r\n            </Popup>\r\n          ) : null}\r\n        </ReactMapGL>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    hotspots: state.hotspots,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getHotspots: getHotspots,\r\n})(Map);\r\n","import axios from \"axios\";\r\n\r\n//get hotspots data + geojson\r\nexport const getHotspots = () => {\r\n  return async (dispatch) => {\r\n    let response = await axios.get(\r\n      \"https://covid-kannur.herokuapp.com/API/hotspots\"\r\n    );\r\n\r\n    dispatch({ type: \"HOTSPOTS_DATA\", payload: response.data });\r\n  };\r\n};\r\n\r\n//get containment zones list\r\nexport const getContZones = () => {\r\n  return async (dispatch) => {\r\n    let response = await axios.get(\r\n      \"https://covid-kannur.herokuapp.com/API/lsglist\"\r\n    );\r\n\r\n    dispatch({ type: \"CONTAINMENT_ZONES\", payload: response.data });\r\n  };\r\n};\r\n\r\n//get overview\r\nexport const getOverview = () => {\r\n  return async (dispatch) => {\r\n    let response = await axios.get(\r\n      \"https://covid-kannur.herokuapp.com/API/overview\"\r\n    );\r\n\r\n    dispatch({ type: \"OVERVIEW\", payload: response.data });\r\n  };\r\n};\r\n\r\n//get details\r\n\r\nexport const getDetails = () => {\r\n  return async (dispatch) => {\r\n    let response = await axios.get(\r\n      \"https://covid-kannur.herokuapp.com/API/details\"\r\n    );\r\n\r\n    dispatch({ type: \"DETAILS\", payload: response.data });\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./overview.css\";\r\nimport { getOverview } from \"../actions\";\r\n\r\nconst Overview = (props) => {\r\n  const { overview, getOverview } = props;\r\n  useEffect(() => {\r\n    getOverview();\r\n  }, [getOverview]);\r\n\r\n  const getDelta = (delta) => {\r\n    if (delta !== 0) {\r\n      return `↑${delta}`;\r\n    }\r\n  };\r\n\r\n  if (overview.active)\r\n    return (\r\n      <div>\r\n        <h3 className=\"title\">\r\n          COVID<span>19</span> — Kannur\r\n        </h3>\r\n        <div className=\"overview-top\">\r\n          <div className=\"active\">\r\n            Active\r\n            <div>\r\n              {\" \"}\r\n              <span>{overview.active}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"confirmed\">\r\n            <div>\r\n              <div>Confirmed</div>\r\n              {overview.confirmed}{\" \"}\r\n              <span className=\"bad-delta\">\r\n                {getDelta(overview.delta.confirmed)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"deceased\">\r\n            Deceased\r\n            <div>\r\n              {overview.deceased}{\" \"}\r\n              <span className=\"bad-delta\">\r\n                {getDelta(overview.delta.deceased)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"recovered\">\r\n            Recovered\r\n            <div>\r\n              {overview.recovered}{\" \"}\r\n              <span className=\"good-delta\">\r\n                {getDelta(overview.delta.recovered)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* <div>Confirmed Today: {overview.delta.confirmed}</div>\r\n        <div>Deceased Today: {overview.delta.deceased}</div>\r\n        <div>Recovered Today: {overview.delta.recovered}</div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  else return <div>Loading</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  //   console.log(state);\r\n  return { overview: state.overview };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getOverview: getOverview,\r\n})(Overview);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Line, Chart } from \"react-chartjs-2\";\r\nimport { getDetails } from \"../actions\";\r\n\r\nimport \"./graphs.css\";\r\n\r\nconst Graphs = (props) => {\r\n  const { details, getDetails } = props;\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, [getDetails]);\r\n\r\n  Chart.defaults.global.defaultFontFamily = \"'Raleway', sans-serif\";\r\n\r\n  if (details)\r\n    return (\r\n      <div className=\"graph-container\">\r\n        <h3 className=\"graph-title\">Statistics</h3>\r\n        <div className=\"graph\">\r\n          <Line\r\n            data={details}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              spanGaps: true,\r\n              legend: {\r\n                display: true,\r\n                position: \"top\",\r\n                align: \"center\",\r\n                labels: {\r\n                  boxWidth: 20,\r\n                },\r\n              },\r\n\r\n              scales: {\r\n                xAxes: [\r\n                  {\r\n                    ticks: {\r\n                      autoSkip: true,\r\n                      autoSkipPadding: 10,\r\n                    },\r\n                    display: true,\r\n                    gridLines: {\r\n                      display: true,\r\n                      color: \"#ffffff\",\r\n                      lineWidth: 0.1,\r\n                    },\r\n                  },\r\n                ],\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    gridLines: {\r\n                      display: true,\r\n                      color: \"#ffffff\",\r\n                      lineWidth: 0.1,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  else return <div className=\"loading\">Loading</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.details,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getDetails: getDetails,\r\n})(Graphs);\r\n","import React from \"react\";\r\nimport \"./meta.css\";\r\n\r\nconst Meta = () => {\r\n  return (\r\n    <div className=\"meta\">\r\n      <div className=\"API\">\r\n        <div>API for Kannur</div>\r\n        <ul>\r\n          <li>\r\n            hosted @{\" \"}\r\n            <a target=\"blank\" href=\"http://covid-kannur.herokuapp.com/\">\r\n              covid-kannur.herokuapp.com\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"attribution\">\r\n        <div>Attribution</div>\r\n\r\n        <ul>\r\n          Live Hotspots/Containment Zones:\r\n          <li className=\"link\">\r\n            <a target=\"blank\" href=\"https://github.com/c19k\">\r\n              C19K repo:{\" \"}\r\n            </a>\r\n            built and maintained by the amazing volunteers at{\" \"}\r\n            <a target=\"blank\" href=\"https://team.covid19kerala.info/\">\r\n              CODDK\r\n            </a>{\" \"}\r\n          </li>\r\n        </ul>\r\n\r\n        <ul>\r\n          Infection summary and statistics:\r\n          <li className=\"link\">\r\n            <a target=\"blank\" href=\"https://api.covid19india.org/\">\r\n              COVID19INDIA API\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Meta;\r\n","import React from \"react\";\r\nimport Map from \"./Map\";\r\nimport Overview from \"./Overview\";\r\nimport Graphs from \"./Graphs\";\r\nimport Meta from \"./Meta\";\r\n// import ContainmentZones from \"./ContainmentZones\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Overview />\r\n        <Map />\r\n        <Graphs />\r\n        {/* <ContainmentZones /> */}\r\n        <Meta />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport kannur from \"../data/kannur.json\";\r\n\r\n//hotspots reducer\r\nconst hotspotsReducer = (state = kannur, action) => {\r\n  switch (action.type) {\r\n    case \"HOTSPOTS_DATA\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//containment zones reducer\r\nconst contZonesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"CONTAINMENT_ZONES\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n//ovreview reducer\r\nconst overviewReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"OVERVIEW\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//details reducer\r\nconst detailsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"DETAILS\":\r\n      let labels = [],\r\n        confirmedData = [],\r\n        recoveredData = [],\r\n        deceasedData = [],\r\n        activeData = [];\r\n      action.payload.forEach((obj) => {\r\n        labels.push(obj.date);\r\n        confirmedData.push(obj.Kannur.total.confirmed);\r\n        recoveredData.push(obj.Kannur.total.recovered);\r\n        deceasedData.push(obj.Kannur.total.deceased);\r\n        activeData.push(\r\n          obj.Kannur.total.confirmed -\r\n            obj.Kannur.total.recovered -\r\n            obj.Kannur.total.deceased +\r\n            2\r\n        );\r\n      });\r\n      let chartData = {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: \"conf\",\r\n            data: confirmedData,\r\n            borderColor: \"yellow\",\r\n            pointRadius: 0,\r\n          },\r\n          {\r\n            label: \"rec\",\r\n            data: recoveredData,\r\n            borderColor: \"green\",\r\n            pointRadius: 0,\r\n          },\r\n          {\r\n            label: \"dec\",\r\n            data: deceasedData,\r\n            borderColor: \"blue\",\r\n            pointRadius: 0,\r\n          },\r\n          {\r\n            label: \"act\",\r\n            data: activeData,\r\n            borderColor: \"red\",\r\n            pointRadius: 0,\r\n          },\r\n        ],\r\n      };\r\n      return chartData;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  hotspots: hotspotsReducer,\r\n  contZones: contZonesReducer,\r\n  overview: overviewReducer,\r\n  details: detailsReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}